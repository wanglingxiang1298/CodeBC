'solc --version' running
'solc Initializable.txt_2.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,D:\wanglingxiang\program_smart_contract\data_test\other_model\deepseek_coder_6.7b_instruct_result_split' running
Compilation warnings/errors on Initializable.txt_2.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.

--> Initializable.txt_2.sol



Error: Modifier body does not contain '_'.

  --> Initializable.txt_2.sol:10:33:

   |

10 |     modifier onlyInitializing() {

   |                                 ^ (Relevant source part starts here and spans across multiple lines).



Error: Modifier body does not contain '_'.

  --> Initializable.txt_2.sol:19:35:

   |

19 |     modifier onlyReinitializing() {

   |                                   ^ (Relevant source part starts here and spans across multiple lines).



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:13:24:

   |

13 |         _initialized = INITIALIZATION_VERSION;

   |                        ^^^^^^^^^^^^^^^^^^^^^^



Error: Undeclared identifier. Did you mean "_initialized" or "initialize"?

  --> Initializable.txt_2.sol:14:14:

   |

14 |         emit Initialized(VERSION);

   |              ^^^^^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:14:26:

   |

14 |         emit Initialized(VERSION);

   |                          ^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:17:9:

   |

17 |         yield();

   |         ^^^^^



Error: Undeclared identifier. Did you mean "_initialized" or "initialize"?

  --> Initializable.txt_2.sol:23:14:

   |

23 |         emit Initialized(VERSION);

   |              ^^^^^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:23:26:

   |

23 |         emit Initialized(VERSION);

   |                          ^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:25:9:

   |

25 |         yield();

   |         ^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:28:31:

   |

28 |         require(msg.sender == owner, "Only the owner can perform this function");

   |                               ^^^^^



Error: Undeclared identifier. Did you mean "_initialized" or "initialize"?

  --> Initializable.txt_2.sol:40:14:

   |

40 |         emit Initialized(VERSION);

   |              ^^^^^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:40:26:

   |

40 |         emit Initialized(VERSION);

   |                          ^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:49:16:

   |

49 |         return INITIALIZABLE_STORAGE;

   |                ^^^^^^^^^^^^^^^^^^^^^




Traceback (most recent call last):
  File "D:\ProgramData\Anaconda3\lib\site-packages\crytic_compile\platform\solc.py", line 582, in _run_solc
    ret: Dict = json.loads(stdout)
  File "D:\ProgramData\Anaconda3\lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "D:\ProgramData\Anaconda3\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\ProgramData\Anaconda3\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\ProgramData\Anaconda3\lib\runpy.py", line 197, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "D:\ProgramData\Anaconda3\lib\runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "D:\ProgramData\Anaconda3\Scripts\slither.exe\__main__.py", line 7, in <module>
  File "D:\ProgramData\Anaconda3\lib\site-packages\slither\__main__.py", line 727, in main
    main_impl(all_detector_classes=detectors, all_printer_classes=printers)
  File "D:\ProgramData\Anaconda3\lib\site-packages\slither\__main__.py", line 833, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
  File "D:\ProgramData\Anaconda3\lib\site-packages\slither\__main__.py", line 96, in process_all
    compilations = compile_all(target, **vars(args))
  File "D:\ProgramData\Anaconda3\lib\site-packages\crytic_compile\crytic_compile.py", line 718, in compile_all
    compilations.append(CryticCompile(target, **kwargs))
  File "D:\ProgramData\Anaconda3\lib\site-packages\crytic_compile\crytic_compile.py", line 207, in __init__
    self._compile(**kwargs)
  File "D:\ProgramData\Anaconda3\lib\site-packages\crytic_compile\crytic_compile.py", line 629, in _compile
    self._platform.compile(self, **kwargs)
  File "D:\ProgramData\Anaconda3\lib\site-packages\crytic_compile\platform\solc.py", line 151, in compile
    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)
  File "D:\ProgramData\Anaconda3\lib\site-packages\crytic_compile\platform\solc.py", line 280, in _get_targets_json
    return _run_solc(
  File "D:\ProgramData\Anaconda3\lib\site-packages\crytic_compile\platform\solc.py", line 586, in _run_solc
    raise InvalidCompilation(f"Invalid solc compilation {stderr}")
crytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.

--> Initializable.txt_2.sol



Error: Modifier body does not contain '_'.

  --> Initializable.txt_2.sol:10:33:

   |

10 |     modifier onlyInitializing() {

   |                                 ^ (Relevant source part starts here and spans across multiple lines).



Error: Modifier body does not contain '_'.

  --> Initializable.txt_2.sol:19:35:

   |

19 |     modifier onlyReinitializing() {

   |                                   ^ (Relevant source part starts here and spans across multiple lines).



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:13:24:

   |

13 |         _initialized = INITIALIZATION_VERSION;

   |                        ^^^^^^^^^^^^^^^^^^^^^^



Error: Undeclared identifier. Did you mean "_initialized" or "initialize"?

  --> Initializable.txt_2.sol:14:14:

   |

14 |         emit Initialized(VERSION);

   |              ^^^^^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:14:26:

   |

14 |         emit Initialized(VERSION);

   |                          ^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:17:9:

   |

17 |         yield();

   |         ^^^^^



Error: Undeclared identifier. Did you mean "_initialized" or "initialize"?

  --> Initializable.txt_2.sol:23:14:

   |

23 |         emit Initialized(VERSION);

   |              ^^^^^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:23:26:

   |

23 |         emit Initialized(VERSION);

   |                          ^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:25:9:

   |

25 |         yield();

   |         ^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:28:31:

   |

28 |         require(msg.sender == owner, "Only the owner can perform this function");

   |                               ^^^^^



Error: Undeclared identifier. Did you mean "_initialized" or "initialize"?

  --> Initializable.txt_2.sol:40:14:

   |

40 |         emit Initialized(VERSION);

   |              ^^^^^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:40:26:

   |

40 |         emit Initialized(VERSION);

   |                          ^^^^^^^



Error: Undeclared identifier.

  --> Initializable.txt_2.sol:49:16:

   |

49 |         return INITIALIZABLE_STORAGE;

   |                ^^^^^^^^^^^^^^^^^^^^^




